<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CinemaTests" tests="1" skipped="0" failures="1" errors="0" timestamp="2022-02-25T21:11:33" hostname="DESKTOP-E987G68" time="1.211">
  <properties/>
  <testcase name="start" classname="CinemaTests" time="1.211">
    <failure message="java.lang.AssertionError: Wrong answer in test #6&#10;&#10;Wrong current income!&#10;Found: $48&#10;Expected: $54&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Enter the number of rows:&#10;&gt; 9&#10;Enter the number of seats in each row:&#10;&gt; 9&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 3&#10;Number of purchased tickets: 0&#10;Percentage: 0.00%&#10;Current income: $0&#10;Total income: $720&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 2&#10;Enter a row number:&#10;&gt; 1&#10;Enter a seat number in that row:&#10;&gt; 7&#10;Ticket price: $10&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 2&#10;Enter a row number:&#10;&gt; 1&#10;Enter a seat number in that row:&#10;&gt; 8&#10;Ticket price: $10&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 2&#10;Enter a row number:&#10;&gt; 1&#10;Enter a seat number in that row:&#10;&gt; 9&#10;Ticket price: $10&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 3&#10;Number of purchased tickets: 3&#10;Percentage: 3.70%&#10;Current income: $30&#10;Total income: $720&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 2&#10;Enter a row number:&#10;&gt; 9&#10;Enter a seat number in that row:&#10;&gt; 1&#10;Ticket price: $8&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 2&#10;Enter a row number:&#10;&gt; 9&#10;Enter a seat number in that row:&#10;&gt; 2&#10;Ticket price: $8&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 2&#10;Enter a row number:&#10;&gt; 9&#10;Enter a seat number in that row:&#10;&gt; 3&#10;Ticket price: $8&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit&#10;&gt; 3&#10;Number of purchased tickets: 6&#10;Percentage: 7.41%&#10;Current income: $48&#10;Total income: $720&#10;1. Show the seats&#10;2. Buy a ticket&#10;3. Statistics&#10;0. Exit" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #6

Wrong current income!
Found: $48
Expected: $54

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Enter the number of rows:
&gt; 9
Enter the number of seats in each row:
&gt; 9
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 3
Number of purchased tickets: 0
Percentage: 0.00%
Current income: $0
Total income: $720
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 2
Enter a row number:
&gt; 1
Enter a seat number in that row:
&gt; 7
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 2
Enter a row number:
&gt; 1
Enter a seat number in that row:
&gt; 8
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 2
Enter a row number:
&gt; 1
Enter a seat number in that row:
&gt; 9
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 3
Number of purchased tickets: 3
Percentage: 3.70%
Current income: $30
Total income: $720
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 2
Enter a row number:
&gt; 9
Enter a seat number in that row:
&gt; 1
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 2
Enter a row number:
&gt; 9
Enter a seat number in that row:
&gt; 2
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 2
Enter a row number:
&gt; 9
Enter a seat number in that row:
&gt; 3
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
&gt; 3
Number of purchased tickets: 6
Percentage: 7.41%
Current income: $48
Total income: $720
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
	at org.junit.Assert.fail(Assert.java:88)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:155)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Enter the number of rows:
> 7
Enter the number of seats in each row:
> 8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 0
?[1;31m
Start test 2?[0m
Enter the number of rows:
> 7
Enter the number of seats in each row:
> 8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 3 4 5 6 7 8 
1 S S S S S S S S 
2 S S S S S S S S 
3 S S S S S S S S 
4 S S S S S S S S 
5 S S S S S S S S 
6 S S S S S S S S 
7 S S S S S S S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
Enter the number of rows:
> 2
Enter the number of seats in each row:
> 2
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 
1 S S 
2 S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
Enter the number of rows:
> 9
Enter the number of seats in each row:
> 9
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 3 4 5 6 7 8 9 
1 S S S S S S S S S 
2 S S S S S S S S S 
3 S S S S S S S S S 
4 S S S S S S S S S 
5 S S S S S S S S S 
6 S S S S S S S S S 
7 S S S S S S S S S 
8 S S S S S S S S S 
9 S S S S S S S S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 0
?[1;31m
Start test 3?[0m
Enter the number of rows:
> 7
Enter the number of seats in each row:
> 8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 2
Enter a seat number in that row:
> 4
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 3 4 5 6 7 8 
1 S S S S S S S S 
2 S S S B S S S S 
3 S S S S S S S S 
4 S S S S S S S S 
5 S S S S S S S S 
6 S S S S S S S S 
7 S S S S S S S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 3
Enter a seat number in that row:
> 5
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 3 4 5 6 7 8 
1 S S S S S S S S 
2 S S S B S S S S 
3 S S S S B S S S 
4 S S S S S S S S 
5 S S S S S S S S 
6 S S S S S S S S 
7 S S S S S S S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
?[1;31m
Start test 4?[0m
Enter the number of rows:
> 9
Enter the number of seats in each row:
> 9
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 1
Enter a seat number in that row:
> 1
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 4
Enter a seat number in that row:
> 5
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 3 4 5 6 7 8 9 
1 B S S S S S S S S 
2 S S S S S S S S S 
3 S S S S S S S S S 
4 S S S S B S S S S 
5 S S S S S S S S S 
6 S S S S S S S S S 
7 S S S S S S S S S 
8 S S S S S S S S S 
9 S S S S S S S S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 5
Enter a seat number in that row:
> 5
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 3 4 5 6 7 8 9 
1 B S S S S S S S S 
2 S S S S S S S S S 
3 S S S S S S S S S 
4 S S S S B S S S S 
5 S S S S B S S S S 
6 S S S S S S S S S 
7 S S S S S S S S S 
8 S S S S S S S S S 
9 S S S S S S S S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 6
Enter a seat number in that row:
> 6
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 1
Cinema:
  1 2 3 4 5 6 7 8 9 
1 B S S S S S S S S 
2 S S S S S S S S S 
3 S S S S S S S S S 
4 S S S S B S S S S 
5 S S S S B S S S S 
6 S S S S S B S S S 
7 S S S S S S S S S 
8 S S S S S S S S S 
9 S S S S S S S S S 
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
?[1;31m
Start test 5?[0m
Enter the number of rows:
> 9
Enter the number of seats in each row:
> 9
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 1
Enter a seat number in that row:
> 1
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 1
Enter a seat number in that row:
> 1
That ticket has already been purchased!
Enter a row number:
> 9
Enter a seat number in that row:
> 5
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 9
Enter a seat number in that row:
> 5
That ticket has already been purchased!
Enter a row number:
> 2
Enter a seat number in that row:
> 3
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 10
Enter a seat number in that row:
> 1
Wrong input!
Enter a row number:
> 5
Enter a seat number in that row:
> 10
Wrong input!
Enter a row number:
> -5
Enter a seat number in that row:
> 12
Wrong input!
Enter a row number:
> 5
Enter a seat number in that row:
> 5
?[1;31m
Start test 6?[0m
Enter the number of rows:
> 9
Enter the number of seats in each row:
> 9
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 3
Number of purchased tickets: 0
Percentage: 0.00%
Current income: $0
Total income: $720
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 1
Enter a seat number in that row:
> 7
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 1
Enter a seat number in that row:
> 8
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 1
Enter a seat number in that row:
> 9
Ticket price: $10
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 3
Number of purchased tickets: 3
Percentage: 3.70%
Current income: $30
Total income: $720
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 9
Enter a seat number in that row:
> 1
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 9
Enter a seat number in that row:
> 2
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 2
Enter a row number:
> 9
Enter a seat number in that row:
> 3
Ticket price: $8
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
> 3
Number of purchased tickets: 6
Percentage: 7.41%
Current income: $48
Total income: $720
1. Show the seats
2. Buy a ticket
3. Statistics
0. Exit
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
